#!/bin/bash
###############################################################
#                Unofficial 'Bash strict mode'                #
# http://redsymbol.net/articles/unofficial-bash-strict-mode/  #
###############################################################
set -euo pipefail
IFS=$'\n\t'
###############################################################

AP_MODE_CONFIG_FILE="/home/pi/dev/pt-wireless-access-point-deb/default_config"

usage_and_exit() {
	echo -e "Usage:\n\t${0} <start|stop> <SSID> <PASSPHRASE>"
	echo "where:"
	echo -e "\t<start|stop>: start or stop AP mode"
	echo -e "\t<SSID>: name of the access point wireless network. If not provided, uses the SSID from ${AP_MODE_CONFIG_FILE}"
	echo -e "\t<PASSPHRASE>: network password. If not provided, uses the passphrase from ${AP_MODE_CONFIG_FILE}"
	exit 1
}

if [[ "$EUID" -ne 0 ]]; then
	echo "Please run as root"
	exit 1
fi

if [[ "${1}" != "start" ]] && [[ "${1}" != "stop" ]]; then
	echo "Argument does not match 'start' or 'stop."
	echo ""
	usage_and_exit
fi

source "${AP_MODE_CONFIG_FILE}"

wifi_interface="${wifi_interface:-wlan0}"
static_ip_prefix="${static_ip_prefix:-10.8.8}"
interface_ip="${interface_ip:-${static_ip_prefix}.1}"
subnet_ip="${subnet_ip:-${static_ip_prefix}.0}"
subnet_mask="${subnet_mask:-255.255.255.0}"
dhcp_start="${dhcp_start:-${static_ip_prefix}.10}"
dhcp_end="${dhcp_end:-${static_ip_prefix}.50}"

ssid="${ssid:-${2}}"
wpa_passphrase="${wpa_passphrase:-${3}}"

if [[ -z "${ssid}" ]]; then
	echo "No ssid provided"
	exit 1
fi

if [[ -z "${wpa_passphrase}" ]]; then
	echo "No wpa passphrase"
	exit 1
fi

if [[ "${1}" == "start" ]] || [[ "${1}" == "restart" ]]; then

	hostapd_conf="/etc/hostapd/hostapd.conf"
	if [[ -f "${hostapd_conf}" ]]; then
		echo "=== Backing up existing ${hostapd_conf}..."
		cp "${hostapd_conf}" "${hostapd_conf}.orig"
	fi

	echo "=== Configuring hostapd ..."
	echo "interface=${wifi_interface}
hw_mode=g
channel=6
macaddr_acl=0
auth_algs=1
ignore_broadcast_ssid=0
wpa=2
wpa_pairwise=TKIP
rsn_pairwise=CCMP
ssid=${ssid}
wpa_passphrase=${wpa_passphrase}" >/etc/hostapd/hostapd.conf
	echo "=== New hostapd config:"
	cat "${hostapd_conf}"

	echo "=== Configuring ..."
	# TODO: Wrap with tags, same as other dhcpd file edits
	# e.g. "[pi-topOS START]"
	if ! grep -q "interface ${wifi_interface}
      static ip_address=${interface_ip}/24" /etc/dhcpcd.conf; then
		echo "===== Setting static IP configuration in /etc/dhcpcd.conf..."
		echo "interface ${wifi_interface}
      static ip_address=${interface_ip}/24" >>/etc/dhcpcd.conf
	fi

	# TODO: Wrap with tags, same as other dhcpd file edits
	# e.g. "[pi-topOS START]"
	if ! grep -q "subnet ${subnet_ip} netmask ${subnet_mask} {" /etc/dhcp/dhcpd.conf; then
		echo "===== Setting subnet configuration in /etc/dhcp/dhcpd.conf..."
		echo "subnet ${subnet_ip} netmask ${subnet_mask} {
    range ${static_ip_prefix}.${dhcp_start} ${static_ip_prefix}.${dhcp_end};
    option subnet-mask ${subnet_mask};
    option routers ${interface_ip};
    option domain-name-servers 8.8.8.8, 8.8.4.4;
    option time-offset 0;
    option broadcast-address ${static_ip_prefix}.255;
  }" >>/etc/dhcp/dhcpd.conf
	fi

	# TODO: be more elegant in adding this to the space-separated list variable
	echo "===== Configuring ${wifi_interface} in /etc/default/isc-dhcp-server..."
	sed -i 's,INTERFACESv4="ptusb0",INTERFACESv4="ptusb0 '${wifi_interface}'",' /etc/default/isc-dhcp-server

	echo "=== Stopping Wifi: Managed Mode ..."
	# TODO: review if this is necessary or if there's a way to handle this more elegantly
	echo "=== Stoppping ${wifi_interface} using wpa_cli"
	wpa_cli -i "${wifi_interface}" terminate && true
	echo "=== Stoppping  wpa_supplicant.service"
	systemctl stop wpa_supplicant

	echo "=== Starting Wifi: Access Point Mode ..."
	# TODO: check the correct way these services need to be restarted
	systemctl restart pt-dhcp-server
	sleep 3
	systemctl restart hostapd
	sleep 3
	systemctl restart isc-dhcp-server

elif [[ "${1}" == "stop" ]]; then
	echo "=== Stopping Wifi: Access Point Mode ..."
	systemctl stop hostapd

	# TODO: be more elegant in removing the static ip setting
	sed -i -z 's,interface '${wifi_interface}'\n      static ip_address='${interface_ip}'/24,,g' /etc/dhcpcd.conf

	# TODO: be more elegant in removing this from the space-separated list variable
	sed -i 's/INTERFACESv4="ptusb0 '${wifi_interface}'"/INTERFACESv4="ptusb0"/' /etc/default/isc-dhcp-server

	echo "=== Starting Wifi: Managed Mode ..."
	systemctl restart dhcpcd
	systemctl restart pt-dhcp-server

	# TODO: review if this is necessary or if there's a way to handle this more elegantly
	systemctl restart wpa_supplicant
	nohup wpa_supplicant -c/etc/wpa_supplicant/wpa_supplicant.conf -i${wifi_interface} &
	disown
fi

echo "=== Done!"
